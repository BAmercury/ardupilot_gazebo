#!/bin/sh

# Setup:
# sudo apt install xdotools wmctrl
# Add this to the bashrc so you can run this script in any directory:
# export PATH=$PATH:~/Documents/ardupilot_gazebo/scripts/SITLInterface/


# Ctrl C signal catch
# trap_ctrlc()
# {
#     # perform cleanup here
#     echo "Ctrl-C caught...performing clean up"
 
#     echo "Doing cleanup"
 
#     # exit shell script with error code 2
#     # if omitted, shell script will continue execution
#     #xdotool windowkill `xdotool getactivewindow`
#     xdotool key Control+Page_Up
#     xdotool key Control+C `xdotool getactivewindow`
#     #xdotool key Control+C
#     #exit
#     #xdotools key Control+C
#     #exit 0

# }

#trap "trap_ctrlc" 2

echo "Launching Ardupilot SITL"

gnome-terminal --tab --working-directory=Documents/ardupilot_beta/Tools/autotest -e "bash -c \"python sim_vehicle.py -v ArduCopter -f gazebo-iris --console; exec bash\""

echo "Running Joystick SITL interface"
# gnome-terminal -e "bash -c \"!!; exec bash\"" to run commands in a new terminal
# Just relace the !!
# Found here: https://askubuntu.com/questions/484993/run-command-on-anothernew-terminal-window
gnome-terminal --tab --working-directory=Documents/ardupilot_gazebo/scripts/SITLInterface -e "bash -c \"python sitl_interface.py; exec bash\""


# Launch Gazebo with user arguments
echo "Running Desired World: $1"
if [ "$1" = "cam_rail" ]
    then 
        gazebo --verbose iris_irlock_rail_sim.world
elif [ "$1" = "nocam_rail" ]
    then gazebo --verbose iris_irlock_nocam_rail_sim.world
elif [ "$1" = "cam_no_rail" ]
    then gazebo --verbose iris_irlock_demo.world
fi